/*
 *------
 * BGA framework: Gregory Isabelli & Emmanuel Colin & BoardGameArena
 * RivalX implementation : © LoonTonk
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 */

#board {
    // Setup Image
    width: 522px;
    height: 522px;
    background-image: url('img/rivalxboard.png'); //TODO: probably should make the board look a little better
    // Center the board
    margin: auto;
    left: 0; top: 0; right: 0; bottom: 0;
    // Tokens and squares are absolutely placed relative to the board
    position: relative;
}

.square {
    // Size of a square
    width: 62px;
    height: 62px;
    // Position relative to the board, not affected by other elements.
    position: absolute;
    // Placeholder for validating the positions.
	background-color: rgb(255, 255, 255);
	z-index: 0;
}

.scoretile {  
	top: 0px;
	left: 0px;
 	width: 62px;
    height: 62px; 
	position: absolute; 
	z-index: 1; 
}

.tilecolor_0000FF {   background-color: #A4C8F0 }
.tilecolor_FF0000 { background-color:#FF9AA2; }

.token {width: 56px; height: 56px; position: absolute; z-index: 4; background-image: url('img/rivalxtokens.png'); transform: scale(0.9) } //TODO: add more colors

//TODO: Change these to be from the same image and look nicer
.tokencolor_0 { background-position: 0px 0px; } // Wild token
.tokencolor_0000FF { background-position: -56px 0px; } // Blue token
.tokencolor_FF0000 { background-position: -112px 0px; } // Red token

.playertokens {
	width: 64px;
	height: 64px;
	background-image: url("img/backgroundcircle.png");
	position: relative;
  }

.displayToken {
	top: 50%; /* Move it to the middle vertically */
	left: 50%; /* Move it to the middle horizontally */
	transform: translate(-50%, -50%) scale(0.7); /* Offset by half of its own width and height */
}

.counter {
	position: absolute;
	top: 50%; /* Move it to the middle vertically */
	left: 50%; /* Move it to the middle horizontally */
	transform: translate(-50%, 50%) ; /* Offset by half of its own width and height */
}

.selectable {
	animation: selectable-token-animation 1s ease-in-out infinite alternate-reverse;
	background: url('img/rivalxselected.png');
	position: absolute;
	width: 60px;
	height: 60px;
	top: 50%; /* Move it to the middle vertically */
	left: 50%; /* Move it to the middle horizontally */
	transform: translate(-50%, -50%) ; /* Offset by half of its own width and height */
	z-index: 5;
}

@keyframes selectable-token-animation {
	0% {
		opacity: .1
	}

	to {
		opacity: .6
	}
}

.selectable.selected {
	animation: none;
}

.pattern {
	position: absolute;
	// background-image: url('img/rivalxpatterns.png');
	z-index: 2;
	pointer-events: none; /* Allows clicks to pass through */
}

.patterncolor_0000FF.patterntype_row {
	background-image: url('img/rivalxpatterns1.png');
	height: 74px;
	width: 330px;
}

.patterntype_col {
	background-image: url('img/rivalxpatterns2.png');
	height: 330px;
	width: 74px;
}

.patterntype_nwd {
	background-image: url('img/rivalxpatterns5.png');
	height: 330px;
	width: 330px;
}

.patterntype_ned {
	background-image: url('img/rivalxpatterns6.png');
	height: 330px;
	width: 330px;
}

.patterntype_pls {
	background-image: url('img/rivalxpatterns4.png');
	height: 202px;
	width: 202px;
}

.patterntype_crs {
	background-image: url('img/rivalxpatterns3.png');
	height: 202px;
	width: 202px;
}


.lastPlayed {
}


.possibleMove {
    background-color: rgba(255, 255, 255, 0.021);
    cursor: pointer;
    transition: 100ms;
}

.possibleMove:hover {
    background-color: rgba(255, 255, 255, 0.3);
}
/* .selectable::before {
	animation: selectable-token-animation 1s ease-in-out infinite alternate-reverse;
	background: url('img/rivalxselected.png') no-repeat;
	content: "";
	position: absolute;
	top: 50%; /* Move it to the middle vertically 
	left: 50%; /* Move it to the middle horizontally 
	transform: translate(-50%, 50%) ; /* Offset by half of its own width and height 
} */
/*
	This is the CSS stylesheet of your game User Interface.
	
	Styles defined on this file will be applied to the HTML elements you define in your
	HTML template (*.tpl), and to HTML elements you create dynamically (in rivalx.js).
	
	Usually, you are using CSS to:
	
	1°) define the overall layout of your game (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

	2°) create your CSS-sprites: All images of your games should be gathered into a small number of image files. Then, using background-image and background-position CSS properties, you create HTML blocks that can  display these images correctly (see example below).
	
	3°) ... anything else: It is really easy to add and remove CSS classes dynamically from your Javascript with dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why, very often, using CSS classes for the logic of your user interface allow you to do complex thing easily.
*/

/*
	Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

	.white_token {
		background-image: url('img/tokens.png');
		background-position: 0px 0px;
	}
	.black_token {
		background-image: url('img/tokens.png');
		background-position: -20px 0px;
	}
	.token {
		width: 20px;
		height: 20px;
		background-repeat: none;
	}
*/