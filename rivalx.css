@charset "UTF-8";
/*
 *------
 * BGA framework: Gregory Isabelli & Emmanuel Colin & BoardGameArena
 * RivalX implementation : © LoonTonk
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 */
#board {
  width: 536px;
  height: 528px;
  background-image: url("img/white_board.png");
  margin: auto;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  position: relative;
}

.square {
  width: 62px;
  height: 62px;
  position: absolute;
  background-color: rgb(141, 141, 141);
  z-index: 0;
}

.scoretile {
  width: 62px;
  height: 62px;
  position: absolute;
  z-index: 1;
}

.tilecolor_0000FF {
  background-image: url("img/blue.png");
}

.tilecolor_FF0000 {
  background-image: url("img/red.png");
}

.token {
  width: 56px;
  height: 56px;
  position: absolute;
  z-index: 2;
}

.tokencolor_0 {
  background-image: url("img/wildx.png");
}

.tokencolor_0000FF {
  background-image: url("img/bluex.png");
}

.tokencolor_FF0000 {
  background-image: url("img/redx.png");
}

.playertokens {
  width: 64px;
  height: 64px;
  background-image: url("img/backgroundcircle.png");
  position: relative;
}

.displayToken {
  top: 50%; /* Move it to the middle vertically */
  left: 50%; /* Move it to the middle horizontally */
  transform: translate(-50%, -50%) scale(0.7); /* Offset by half of its own width and height */
}

.counter {
  position: absolute;
  top: 50%; /* Move it to the middle vertically */
  left: 50%; /* Move it to the middle horizontally */
  transform: translate(-50%, 50%); /* Offset by half of its own width and height */
}

.selectable::before {
  animation: selectable-token-animation 1s ease-in-out infinite alternate-reverse;
  background: url("img/glowingx.png") no-repeat;
  bottom: 0px;
  content: "";
  left: 0px;
  position: absolute;
  right: 0px;
  top: -2px;
}

@keyframes selectable-token-animation {
  0% {
    opacity: 0.5;
  }
  to {
    opacity: 1;
  }
}
.selected {
  background-image: url("img/selected.png");
}

.lastPlayed {
  background-color: rgb(206, 101, 188);
}

.possibleMove {
  background-color: rgba(255, 255, 255, 0.021);
  cursor: pointer;
  transition: 100ms;
}

.possibleMove:hover {
  background-color: rgba(255, 255, 255, 0.3);
}

/*
	This is the CSS stylesheet of your game User Interface.

	Styles defined on this file will be applied to the HTML elements you define in your
	HTML template (*.tpl), and to HTML elements you create dynamically (in rivalx.js).

	Usually, you are using CSS to:

	1°) define the overall layout of your game (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

	2°) create your CSS-sprites: All images of your games should be gathered into a small number of image files. Then, using background-image and background-position CSS properties, you create HTML blocks that can  display these images correctly (see example below).

	3°) ... anything else: It is really easy to add and remove CSS classes dynamically from your Javascript with dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why, very often, using CSS classes for the logic of your user interface allow you to do complex thing easily.
*/
/*
	Example of CSS sprites (a black token and a white token, 20x20px each, embedded in the same "tokens.png" 40x20px image):

	.white_token {
		background-image: url('img/tokens.png');
		background-position: 0px 0px;
	}
	.black_token {
		background-image: url('img/tokens.png');
		background-position: -20px 0px;
	}
	.token {
		width: 20px;
		height: 20px;
		background-repeat: none;
	}
*/
